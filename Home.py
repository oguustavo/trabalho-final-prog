import streamlit as st
import pandas as pd

st.set_page_config(
    page_title="Trabalho Final Programa√ß√£o - Ve√≠culos El√©tricos",
    page_icon="üöó",
    layout="wide"
)

# CSS simples apenas para fonte padr√£o (sem alterar t√≠tulos com HTML)
st.markdown(
    """
    <style>
    html, body, [class*="css"]  {
        font-family: Arial, Helvetica, sans-serif !important;
    }
    </style>
    """,
    unsafe_allow_html=True
)

# T√≠tulos principais com Markdown
st.title("Trabalho Final de Programa√ß√£o")
st.subheader("Dupla: Gustavo Soares e V√≠tor Rodrigues")
st.markdown("## An√°lise de Ve√≠culos El√©tricos no estado de Washington, EUA")
st.markdown("---")

@st.cache_data
def load_data():
    try:
        df = pd.read_csv('Electric_Vehicle_Population_Data.csv')
        return df
    except Exception as e:
        st.error(f"n√£o deu {e}")
        return None

df = load_data()

if df is not None:
    st.metric("N√∫mero total de registros", f"{df.shape[0]:,}")
    st.markdown("---")

    st.markdown("## üéØ Objetivo do Dashboard")
    st.markdown("""
O objetivo principal √© facilitar a compreens√£o das caracter√≠sticas da frota de ve√≠culos el√©tricos,
identificando, por exemplo, os fabricantes mais populares, a evolu√ß√£o da ado√ß√£o de EVs ao longo do tempo
e a distribui√ß√£o geogr√°fica.
""")

    st.markdown("---")
    st.markdown("## üìå Como Navegar")
    st.markdown("""
Use a barra lateral √† esquerda para acessar as diferentes se√ß√µes:

### üìä Vis√£o Geral dos Dados
- Filtros por ano, tipo de ve√≠culo  
- Gr√°ficos de barras, pizza e linha  
- Vis√£o geral dos dados filtrados  

### üè≠ An√°lise Detalhada por Fabricantes
- Filtros espec√≠ficos por fabricante  
- Evolu√ß√£o temporal por fabricante  
- Distribui√ß√£o de tipos e modelos  
- Compara√ß√£o entre fabricantes  
""")

    st.markdown("### Como os Filtros Influenciam")
    st.markdown("""
Em algumas p√°ginas, voc√™ encontrar√° filtros na barra lateral.  
Esses filtros permitem que voc√™ refine os dados exibidos nos gr√°ficos, possibilitando uma an√°lise mais detalhada  
para um ano espec√≠fico, tipo de ve√≠culo, ou outros crit√©rios relevantes.  
Ao alterar os filtros, os gr√°ficos ser√£o automaticamente atualizados.
""")

    st.markdown("---")
    st.markdown("## üìà Filtros limites")

    col1, col2 = st.columns(2)
    with col1:
        if 'Model Year' in df.columns:
            df['Model Year'] = pd.to_numeric(df['Model Year'], errors='coerce')
            ano_min = int(df['Model Year'].min())
            ano_max = int(df['Model Year'].max())
            st.write(f"**Per√≠odo:** {ano_min} - {ano_max}")
        if 'Electric Vehicle Type' in df.columns:
            tipos = df['Electric Vehicle Type'].unique()
            st.write(f"**Tipos de Ve√≠culos:** {len(tipos)}")
    with col2:
        if 'City' in df.columns:
            cidades = df['City'].unique()
            st.write(f"**Cidades:** {len(cidades)}")
else:
    st.error("n√£o deu")
